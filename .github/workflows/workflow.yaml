name: IIS Express for VSCode

on:
  push:
    branches: 
      - master
    paths-ignore:
      - '.vscode/**'
      - 'images/**'
      - 'README.md'

jobs:
  cicd:
    name: cicd
    runs-on: windows-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: fetch all history and tags from all branches for gitversion
        run: git fetch --prune --unshallow

      - name: install gitversion tool
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
            versionSpec: '5.x'
      
      - name: execute gitversion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1.1.1
        
      - name: print gitversion
        run: |
          echo "Major: ${{ steps.gitversion.outputs.major }}"
          echo "Minor: ${{ steps.gitversion.outputs.minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.patch }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: '20.x'
        
      - name: clean install dependencies
        run: yarn install --frozen-lockfile

      - name: update metadata in package.json
        uses: onlyutkarsh/patch-files-action@v1.0.1
        with:
          files: '${{github.workspace}}/package.json'
          patch-syntax: |
            = /version => "${{ steps.gitversion.outputs.semVer }}"

      - name: add version in CHANGELOG.md
        uses: cschleiden/replace-tokens@v1.0
        with:
          files: '${{github.workspace}}/CHANGELOG.md'
        env:
          VERSION: "${{ steps.gitversion.outputs.semVer }}"
      
      - name: compile
        run: yarn vscode:prepublish

      - name: package
        run: yarn package

      - name: print vsix path
        run: |
          echo "VSIX Path: ${{github.workspace}}/iis-express-vscode-${{steps.gitversion.outputs.semVer}}.vsix"

      - name: upload vsix as artifact
        uses: actions/upload-artifact@v1
        with:
          name: iis-express-vscode-${{steps.gitversion.outputs.semVer}}.vsix
          path: ${{github.workspace}}/iis-express-vscode-${{steps.gitversion.outputs.semVer}}.vsix

      # publish to markerplace

      - name: create a release
        if: github.ref == 'refs/heads/master'
        uses: elgohr/Github-Release-Action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          title: v${{ steps.gitversion.outputs.semVer }}
          workdir: ${{github.workspace}}
